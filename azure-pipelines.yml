# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- vnet-injection

pool:
  vmImage: 'windows-latest'

steps:
- task: AzureResourceGroupDeployment@2
  displayName: 'Validate Prerequisites ARM Template'
  inputs:
    azureSubscription: 'Pay-As-You-Go (9ba089ac-b8fc-496b-a408-e42840ba07de)'
    resourceGroupName: 'databricks-vnetinj-rg-ci'
    location: 'Australia East'
    csmFile: azuredeploy.json
    csmParametersFile: azuredeploy.parameters.json
    deploymentMode: Validation
- task: AzureResourceGroupDeployment@2
  displayName: 'Validate Main ARM Template'
  inputs:
    azureSubscription: 'Pay-As-You-Go (9ba089ac-b8fc-496b-a408-e42840ba07de)'
    resourceGroupName: 'databricks-vnetinj-rg-ci'
    location: 'Australia East'
    csmFile: prereqs/prereq.azuredeploy.json
    csmParametersFile: prereqs/prereq.azuredeploy.parameters.json
    deploymentMode: Validation
- task: AzurePowerShell@4
  displayName: 'Run Pester Test'
  inputs:
    azureSubscription: 'Pay-As-You-Go (9ba089ac-b8fc-496b-a408-e42840ba07de)'
    ScriptPath: '$(System.DefaultWorkingDirectory)\Invoke-Pester.ps1'
    ScriptArguments: '-WorkingDirForCI $(System.DefaultWorkingDirectory)'
    azurePowerShellVersion: LatestVersion
    workingDirectory: '$(System.DefaultWorkingDirectory)'
- task: PublishTestResults@2
  displayName: 'Publish Test Results **/TEST-Pester-Test-Results-*.xml '
  inputs:
    testResultsFormat: NUnit
    testResultsFiles: |
     **/TEST-Pester-Test-Results-*.xml
- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    Contents: |
     **/*.json
     **/*.paramaters.json
    TargetFolder: '$(build.artifactstagingdirectory)'
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  